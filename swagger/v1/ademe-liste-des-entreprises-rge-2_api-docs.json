{
  "openapi": "3.1.0",
  "info": {
    "title": "API publique du jeu de données : Liste des entreprises RGE",
    "description": "\nCette documentation interactive à destination des développeurs permet de consommer les ressources du jeu de données \"**Liste des entreprises RGE**\".\n\nPour protéger l'infrastructure de publication de données, les appels sont limités par quelques règles simples :\n\n- Un utilisateur anonyme ne peut pas effectuer plus de 600 requêtes par intervalle de 60 secondes.\n  Sa vitesse de téléchargement totale sera limitée à 2 MB/s pour les contenus statiques (fichiers de données, pièces jointes, etc.) et à 500 kB/s pour les autres appels.\n- Un utilisateur authentifié (session ou clé d'API) ne peut pas effectuer plus de 1200 requêtes par intervalle de 60 secondes.\n  Sa vitesse de téléchargement totale sera limitée à 8 MB/s pour les contenus statiques (fichiers de données, pièces jointes, etc.) et à 1 MB/s pour les autres appels.\n  ",
    "version": "4.47.1",
    "x-api-id": "data-ademe-fr-dataset-liste-des-entreprises-rge-2",
    "contact": {
      "name": "ADEME - Fabrique de la donnée",
      "email": "cdo@ademe.fr"
    },
    "termsOfService": "https://koumoul.com/pages/conditions-generales-dutilisation"
  },
  "components": {
    "securitySchemes": {},
    "schemas": {
      "datasetSchema": {
        "x-exports": [
          "types",
          "resolvedSchema"
        ],
        "title": "Dataset",
        "type": "object",
        "additionalProperties": false,
        "required": [
          "id",
          "createdAt",
          "owner",
          "title"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Globally unique identifier of the dataset"
          },
          "slug": {
            "type": "string",
            "description": "Identifier of the dataset, usually a slug for URL readability (unique inside the tenant)"
          },
          "href": {
            "type": "string",
            "description": "Readonly field. The URL where this resource can be fetched"
          },
          "page": {
            "type": "string",
            "description": "Readonly field. The URL where this resource can be viewed in the UI"
          },
          "title": {
            "type": "string",
            "description": "Short title of the dataset"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the dataset"
          },
          "image": {
            "type": "string",
            "description": "URL d'une image, illustration du jeu de données"
          },
          "spatial": {
            "type": "string",
            "description": "spatial coverage"
          },
          "temporal": {
            "type": "object",
            "description": "temporal coverage",
            "properties": {
              "start": {
                "type": "string",
                "format": "date"
              },
              "end": {
                "type": "string",
                "format": "date"
              }
            }
          },
          "keywords": {
            "type": "array",
            "description": "keywords",
            "items": {
              "type": "string"
            }
          },
          "frequency": {
            "type": "string",
            "description": "update frequency",
            "enum": [
              "",
              "triennial",
              "biennial",
              "annual",
              "semiannual",
              "threeTimesAYear",
              "quarterly",
              "bimonthly",
              "monthly",
              "semimonthly",
              "biweekly",
              "threeTimesAMonth",
              "weekly",
              "semiweekly",
              "threeTimesAWeek",
              "daily",
              "continuous",
              "irregular"
            ]
          },
          "file": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "size",
              "mimetype",
              "schema"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the file that was used to create or update this dataset"
              },
              "size": {
                "type": "number",
                "description": "Size of the file on disk"
              },
              "encoding": {
                "type": "string",
                "description": "Encoding of the file"
              },
              "mimetype": {
                "type": "string",
                "description": "Mime type of the file"
              },
              "schema": {
                "type": "array",
                "description": "JSON schema properties of the fields in the file",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "separator": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dateFormat": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "dateTimeFormat": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "timeZone": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  }
                }
              },
              "props": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "numLines": {
                    "type": "number",
                    "description": "Number of lines this file has."
                  },
                  "linesDelimiter": {
                    "type": "string",
                    "description": "New line character or characters (can be \r\n))"
                  },
                  "fieldsDelimiter": {
                    "type": "string",
                    "description": "Fields delimiter"
                  },
                  "escapeChar": {
                    "type": "string",
                    "description": "Character used to escape string"
                  },
                  "quote": {
                    "type": "string",
                    "description": "Character used to wrap strings"
                  }
                }
              }
            }
          },
          "originalFile": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "name",
              "size",
              "mimetype"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the file that was used to create or update this dataset"
              },
              "size": {
                "type": "number",
                "description": "Size of the file on disk"
              },
              "encoding": {
                "type": "string",
                "description": "Encoding of the file"
              },
              "mimetype": {
                "type": "string",
                "description": "Mime type of the file"
              },
              "md5": {
                "type": "string",
                "description": "MD5 hash of the file content"
              }
            }
          },
          "attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "title"
              ],
              "properties": {
                "title": {
                  "type": "string",
                  "title": "Titre",
                  "x-props": {
                    "outlined": true,
                    "dense": true
                  }
                },
                "description": {
                  "type": "string",
                  "title": "Description",
                  "x-display": "markdown"
                },
                "includeInCatalogPublications": {
                  "type": "boolean",
                  "title": "Inclure dans les publications sur catalogue",
                  "default": false
                }
              },
              "oneOf": [
                {
                  "title": "Fichier",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "type": {
                      "title": "Type de pièce jointe",
                      "const": "file"
                    },
                    "name": {
                      "x-display": "hidden",
                      "type": "string",
                      "description": "Name of the file that was used to create or update this attachment"
                    },
                    "size": {
                      "x-display": "hidden",
                      "type": "number",
                      "description": "Size of the file on disk"
                    },
                    "mimetype": {
                      "x-display": "hidden",
                      "type": "string",
                      "description": "Mime type of the file"
                    },
                    "updatedAt": {
                      "x-display": "hidden",
                      "type": "string",
                      "description": "Date of the last update for this attachment",
                      "format": "date-time"
                    },
                    "url": {
                      "x-display": "hidden",
                      "readOnly": true,
                      "type": "string",
                      "title": "URL"
                    }
                  }
                },
                {
                  "title": "Lien",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "type": {
                      "title": "Type de pièce jointe",
                      "const": "url"
                    },
                    "url": {
                      "type": "string",
                      "title": "URL"
                    }
                  }
                },
                {
                  "title": "Fichier récupéré depuis une URL",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "type": {
                      "title": "Type de pièce jointe",
                      "const": "remoteFile"
                    },
                    "name": {
                      "type": "string",
                      "title": "Nom du fichier",
                      "description": "Ce nom doit contenir l'extension qui doit correspondre au format du fichier téléchargé.",
                      "x-rules": [
                        "hasExtension"
                      ]
                    },
                    "targetUrl": {
                      "type": "string",
                      "title": "URL de téléchargement",
                      "description": "Cette URL n'est pas consultable après écriture. Elle est utilisée pour télécharger le fichier depuis un service distant et peut contenir un secret. Vous pouvez la laisser vide quand vous modifiez les autres informations, mais vous devez la renseigner de nouveau si vous changez le nom de fichier."
                    }
                  }
                }
              ]
            }
          },
          "remoteFile": {
            "type": "object",
            "additionalProperties": true,
            "required": [
              "url"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the remote file that was used to create or update this dataset"
              },
              "url": {
                "type": "string",
                "description": "Url from where the file can be fetched"
              },
              "catalog": {
                "type": "string",
                "description": "Identifiant du catalogue d'origine"
              },
              "size": {
                "type": "number",
                "description": "Size of the file on disk"
              },
              "mimetype": {
                "type": "string",
                "description": "Mime type of the file"
              },
              "etag": {
                "type": "string",
                "description": "content of the \"etag\" response header if it was provided"
              },
              "lastModified": {
                "type": "string",
                "description": "content of the \"last-modified\" response header if it was provided"
              },
              "autoUpdate": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "default": false
                  },
                  "nextUpdate": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdate": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "forceUpdate": {
                "type": "boolean"
              }
            }
          },
          "storage": {
            "type": "object",
            "description": "All storage space info of this dataset",
            "properties": {
              "size": {
                "type": "integer"
              },
              "indexed": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "integer"
                  },
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "collection",
                        "original-file",
                        "normalized-file",
                        "full-file",
                        "attachments",
                        "master-data"
                      ]
                    }
                  }
                }
              },
              "attachments": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "metadataAttachments": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "collection": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "revisions": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "masterData": {
                "type": "object",
                "properties": {
                  "count": {
                    "type": "integer"
                  },
                  "size": {
                    "type": "integer"
                  }
                }
              },
              "dataFiles": {
                "type": "array",
                "description": "Le tableau de résultats.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "mimetype": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "title": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Creation date of this dataset",
            "format": "date-time"
          },
          "createdBy": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of the last metadata update for this dataset",
            "format": "date-time"
          },
          "updatedBy": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "dataUpdatedAt": {
            "type": "string",
            "description": "Date of the last update for this dataset",
            "format": "date-time"
          },
          "dataUpdatedBy": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "finalizedAt": {
            "type": "string",
            "description": "Date of the last finalization for this dataset",
            "format": "date-time"
          },
          "owner": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "type",
              "id",
              "name"
            ],
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "user",
                  "organization"
                ],
                "description": "If the owner is a user or an organization"
              },
              "id": {
                "type": "string",
                "description": "The unique id of the user or organization"
              },
              "name": {
                "type": "string",
                "description": "The display name of the user or organization"
              },
              "role": {
                "type": "string",
                "deprecated": true,
                "description": "DEPRECATED - If this is set and owner is an organization, this restrict ownership to users of this organization having this role or admin role"
              },
              "department": {
                "type": "string",
                "description": "If this is set and owner is an organization, this gives ownership to users of this organization that belong to this department"
              },
              "departmentName": {
                "type": "string",
                "description": "The display name of the department"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "draft",
              "created",
              "remote",
              "uploaded",
              "loaded",
              "imported",
              "stored",
              "analyzed",
              "normalized",
              "validated",
              "validation-updated",
              "schematized",
              "indexed",
              "extended",
              "finalized",
              "error"
            ],
            "description": "The processing steps of a dataset."
          },
          "errorStatus": {
            "type": "string",
            "enum": [
              "draft",
              "created",
              "remote",
              "uploaded",
              "loaded",
              "imported",
              "stored",
              "analyzed",
              "normalized",
              "validated",
              "validation-updated",
              "schematized",
              "indexed",
              "extended",
              "finalized",
              "error"
            ],
            "description": "The processing step the dataset was in when it encountered an error."
          },
          "errorRetry": {
            "type": "string",
            "format": "date-time",
            "description": "If defined the task that triggered an error will be retried after a delay."
          },
          "primaryKey": {
            "type": "array",
            "description": "List of properties of the schema used as unique primary key for each line",
            "items": {
              "type": "string"
            }
          },
          "schema": {
            "type": "array",
            "description": "JSON schema properties of the fields",
            "items": {
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "type": "string",
                  "readOnly": true,
                  "x-display": "hidden"
                },
                "type": {
                  "type": "string"
                },
                "format": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-originalName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "icon": {
                  "type": "string"
                },
                "x-group": {
                  "type": "string"
                },
                "x-refersTo": {
                  "deprecated": true,
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "x-concept": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "primary": {
                      "type": "boolean"
                    }
                  }
                },
                "x-calculated": {
                  "type": "boolean"
                },
                "x-capabilities": {
                  "type": "object",
                  "properties": {
                    "index": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Filtrable sur valeur exacte",
                      "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels des filtres sur valeurs exactes ont peu de sens."
                    },
                    "values": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Triable et groupable",
                      "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels trier ou grouper par valeur a peu de sens."
                    },
                    "textStandard": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Texte analysé pour recherche textuelle",
                      "description": "Désactivez cette capacité dans le cas d'un code, une url, etc. N'importe quel contenu sur lequel la recherche de mots a peu de sens."
                    },
                    "text": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Texte analysé spécifiquement pour la langue française",
                      "description": "Désactivez cette capacité pour tout contenu qui n'est pas en langue française ou pour lequel la recherche de mots a peu de sens."
                    },
                    "textAgg": {
                      "type": "boolean",
                      "default": false,
                      "x-display": "switch",
                      "title": "Statistiques de mots",
                      "description": "Activez cette capacité si avez l'intention d'obtenir des statistiques sur les occurrences de mots (par exemple pour construire un nuage de mot)."
                    },
                    "wildcard": {
                      "type": "boolean",
                      "default": false,
                      "x-display": "switch",
                      "title": "Texte filtrable sur groupe de caractères",
                      "description": "Activez cette capacité si vous avez l'intention de filtrer ce contenu spécifiquement sur une suite de caractères (par exemple si un filtre sur mots entiers ou sur valeur exacte ne convient pas)."
                    },
                    "insensitive": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Tri amélioré avec casse et accents",
                      "description": "Désactivez cette capacité si le contenu ne sera pas utilisé pour du tri ou bien si il ne contient pas de variations avec accents et majuscules."
                    },
                    "geoShape": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Formes géométriques complexes",
                      "description": "Désactivez cette capacité si la donnée ne contient que des géométries basiques de points ou bien si requêter les géométries uniquement à partir de leurs centroïdes est suffisant pour vos besoins."
                    },
                    "vtPrepare": {
                      "type": "boolean",
                      "default": false,
                      "x-display": "switch",
                      "title": "Tuiles vectorielles préparées",
                      "description": "Activez cette capacité pour précalculer des éléments utiles à la construction de tuiles vectorielles pour le rendu cartographique du jeu de données. Activez cette option si le jeu de données contient des données géogreaphiques denses à afficher en grande quantité. La contre-partie est une augmentation du temps d'indexation et du volume de données indexées."
                    },
                    "indexAttachment": {
                      "type": "boolean",
                      "default": true,
                      "x-display": "switch",
                      "title": "Contenu des pièces jointes analysé pour recherche textuelle",
                      "description": "Désactivez cette option si vous souhaitez que les pièces jointes soient simplement téléchargeables et que l'extraction de leur contenu textuel pour recherche de mots n'est pas pertinente."
                    }
                  }
                },
                "x-labels": {
                  "type": "object",
                  "patternProperties": {
                    "．*": {
                      "type": "string"
                    }
                  }
                },
                "x-labelsRestricted": {
                  "type": "boolean"
                },
                "readOnly": {
                  "type": "boolean"
                },
                "x-required": {
                  "type": "boolean"
                },
                "minLength": {
                  "type": "integer"
                },
                "maxLength": {
                  "type": "integer"
                },
                "minimum": {
                  "type": "number"
                },
                "maximum": {
                  "type": "number"
                },
                "pattern": {
                  "type": "string",
                  "format": "regex"
                },
                "patternErrorMessage": {
                  "type": "string"
                },
                "x-master": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "remoteService": {
                      "type": "string",
                      "description": "L'identifiant du service distant utilisé pour l'enrichissement"
                    },
                    "action": {
                      "type": "string",
                      "description": "L'identifiant de l'action du service distant à utiliser pour l'enrichissement"
                    }
                  }
                },
                "x-display": {
                  "type": "string"
                },
                "enum": {
                  "type": "array",
                  "readOnly": true,
                  "description": "This differs from JSON schema. It is not a restriction, just and observation of the values that are present in the dataset."
                },
                "x-cardinality": {
                  "type": "integer",
                  "description": "The number of distinct values for this field",
                  "readOnly": true
                },
                "x-transform": {
                  "type": "object",
                  "description": "Transformation to apply to the field",
                  "properties": {
                    "expr": {
                      "type": "string"
                    },
                    "examples": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "type": {
                      "type": "string"
                    },
                    "format": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "count": {
            "type": "number",
            "description": "The number of indexed documents of a dataset"
          },
          "bbox": {
            "type": "array",
            "description": "The spatial coverage of this dataset, in bounding box format.",
            "items": {
              "type": "number"
            }
          },
          "timePeriod": {
            "type": "object",
            "description": "The temporal coverage of this dataset",
            "properties": {
              "startDate": {
                "type": "string",
                "format": "date-time"
              },
              "endDate": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "timeZone": {
            "type": "string",
            "description": "The original time zone of the calendar."
          },
          "projection": {
            "type": "object",
            "description": "The cartographic projection of this dataset. Refers to the list of supported projections in contract/projections.json",
            "properties": {
              "title": {
                "type": "string"
              },
              "code": {
                "type": "string"
              }
            }
          },
          "license": {
            "type": "object",
            "additionalProperties": false,
            "required": [
              "title",
              "href"
            ],
            "properties": {
              "title": {
                "type": "string",
                "description": "Short title for the license"
              },
              "href": {
                "type": "string",
                "description": "The URL where the license can be read"
              }
            }
          },
          "origin": {
            "type": "string",
            "description": "The URL where the original data can be found"
          },
          "extensions": {
            "type": "array",
            "description": "Définition des enrichissements appliqués à ce jeu de données",
            "items": {
              "type": "object",
              "properties": {
                "active": {
                  "type": "boolean",
                  "description": "Toggle on and off the extension"
                },
                "needsUpdate": {
                  "type": "boolean"
                },
                "autoUpdate": {
                  "type": "boolean"
                },
                "nextUpdate": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "oneOf": [
                {
                  "required": [
                    "type",
                    "expr",
                    "property"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "exprEval"
                    },
                    "expr": {
                      "type": "string"
                    },
                    "property": {
                      "type": "object",
                      "required": [
                        "key",
                        "type"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                {
                  "required": [
                    "type",
                    "remoteService",
                    "action"
                  ],
                  "properties": {
                    "type": {
                      "type": "string",
                      "const": "remoteService"
                    },
                    "remoteService": {
                      "type": "string",
                      "description": "L'identifiant du service distant utilisé pour l'enrichissement"
                    },
                    "action": {
                      "type": "string",
                      "description": "L'identifiant de l'action du service distant à utiliser pour l'enrichissement"
                    },
                    "select": {
                      "type": "array",
                      "description": "La liste des colonnes à sélectionner dans le retour du service distant. Toutes les colonnes si absent ou vide.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "overwriteProperties": {
                      "type": "object",
                      "description": "Les attributs à surcharger sur les proprités résultats de l'enrichissement",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "x-originalName": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "shortId": {
                      "type": "string",
                      "description": "Id court (déprécié)",
                      "readOnly": true
                    },
                    "propertyPrefix": {
                      "type": "string",
                      "description": "Chaine à utiliser comme préfixe des clés de champs issus de cette extension"
                    }
                  }
                }
              ]
            }
          },
          "masterData": {
            "type": "object",
            "title": "Données de référence",
            "properties": {
              "bulkSearchs": {
                "type": "array",
                "title": "Récupération de lignes en masse",
                "x-class": "my-4",
                "x-options": {
                  "editMode": "dialog"
                },
                "items": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Identifiant",
                      "x-if": "parent.value.id",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Titre",
                      "x-props": {
                        "placeholder": "exemple \"récupérer les informations de plusieurs produits\""
                      },
                      "minLength": 3
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "x-display": "textarea",
                      "x-props": {
                        "placeholder": "exemple \"cet enrichissement vous permet de récupérer les informations de plusieurs produits à partir d'une liste de codes produits.\""
                      }
                    },
                    "filters": {
                      "type": "array",
                      "title": "Filtres statiques",
                      "x-class": "mb-4",
                      "x-options": {
                        "editMode": "inline"
                      },
                      "items": {
                        "type": "object",
                        "required": [
                          "property",
                          "values"
                        ],
                        "properties": {
                          "property": {
                            "type": "object",
                            "title": "Propriété sur laquelle appliquer le filtre",
                            "x-fromData": "context.filterProperties",
                            "x-itemTitle": "title",
                            "x-itemKey": "key"
                          },
                          "values": {
                            "type": "array",
                            "title": "Valeurs",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "input": {
                      "type": "array",
                      "title": "Méthodes de correspondance",
                      "x-class": "mb-4",
                      "minItems": 1,
                      "x-options": {
                        "editMode": "inline"
                      },
                      "items": {
                        "type": "object",
                        "required": [
                          "type",
                          "property"
                        ],
                        "oneOf": [
                          {
                            "title": "Valeurs exactement égales",
                            "required": [
                              "type",
                              "property"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "equals",
                                "title": "Type de méthode de correspondance"
                              },
                              "property": {
                                "type": "object",
                                "title": "Propriété comparée",
                                "x-fromData": "context.propertiesWithConcepts",
                                "x-itemTitle": "title",
                                "x-itemKey": "key"
                              }
                            }
                          },
                          {
                            "title": "Date dans un interval",
                            "x-if": "context.hasDateIntervalConcepts",
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "date-in-interval"
                              },
                              "property": {
                                "type": "object",
                                "title": "Date à renseigner",
                                "properties": {
                                  "x-refersTo": {
                                    "type": "string",
                                    "const": "http://schema.org/Date"
                                  },
                                  "key": {
                                    "type": "string",
                                    "const": "_date"
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "string"
                                  },
                                  "format": {
                                    "type": "string",
                                    "const": "date-time"
                                  }
                                }
                              }
                            }
                          },
                          {
                            "title": "Coordonnée géographique à proximité",
                            "x-if": "context.dataset.bbox",
                            "required": [
                              "type",
                              "distance"
                            ],
                            "properties": {
                              "type": {
                                "type": "string",
                                "const": "geo-distance"
                              },
                              "distance": {
                                "type": "integer",
                                "title": "Distance",
                                "default": 0
                              },
                              "property": {
                                "type": "object",
                                "title": "Point à renseigner",
                                "properties": {
                                  "x-refersTo": {
                                    "type": "string",
                                    "const": "http://www.w3.org/2003/01/geo/wgs84_pos#lat_long"
                                  },
                                  "key": {
                                    "type": "string",
                                    "const": "_geopoint"
                                  },
                                  "type": {
                                    "type": "string",
                                    "const": "string"
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    },
                    "sort": {
                      "type": "string",
                      "title": "Tri pour choisir parmi des résultats ambigus",
                      "description": "\nRemarque : ce paramètre est optionnel et utile uniquement si la manière d'établir une correspondance est susceptible de retourner plusieurs résultats par ligne.\n\nLe tri est exprimé sous forme d'une liste de clés de colonnes séparées par des virgules. Par défaut le tri est ascendant, si un nom de colonne est préfixé par un \"-\" alors le tri sera descendant.\n\nExemple: ma_colonne,-ma_colonne2"
                    }
                  }
                }
              },
              "singleSearchs": {
                "type": "array",
                "title": "Recherche de paires code / libellé",
                "x-class": "mb-4",
                "x-options": {
                  "editMode": "dialog"
                },
                "items": {
                  "type": "object",
                  "required": [
                    "title",
                    "output"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "title": "Identifiant",
                      "x-if": "parent.value.id",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Titre",
                      "x-props": {
                        "placeholder": "exemple \"recherche d'un produit\""
                      },
                      "minLength": 3
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "x-display": "textarea",
                      "x-props": {
                        "placeholder": "exemple \"récupérez un code produit en effectuant une recherche dans son code ou son libellé\""
                      }
                    },
                    "output": {
                      "type": "object",
                      "title": "Propriété à retourner (code)",
                      "x-fromData": "context.propertiesWithConcepts",
                      "x-itemTitle": "title",
                      "x-itemKey": "key"
                    },
                    "label": {
                      "type": "object",
                      "title": "Propriété utilisée pour la recherche (libellé)",
                      "x-fromData": "context.stringProperties",
                      "x-itemTitle": "title",
                      "x-itemKey": "key"
                    },
                    "filters": {
                      "type": "array",
                      "title": "Filtres statiques",
                      "x-class": "mb-4",
                      "x-options": {
                        "editMode": "inline"
                      },
                      "items": {
                        "type": "object",
                        "required": [
                          "property",
                          "values"
                        ],
                        "properties": {
                          "property": {
                            "type": "object",
                            "title": "Propriété sur laquelle appliquer le filtre",
                            "x-fromData": "context.filterProperties",
                            "x-itemTitle": "title",
                            "x-itemKey": "key"
                          },
                          "values": {
                            "type": "array",
                            "title": "Valeurs",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              },
              "virtualDatasets": {
                "type": "object",
                "x-class": "mt-4",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "title": "Création de jeux virtuels"
                  }
                }
              },
              "standardSchema": {
                "type": "object",
                "x-class": "mt-4",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "title": "Initialisation de jeux éditables"
                  }
                }
              }
            }
          },
          "publications": {
            "type": "array",
            "description": "References to all the catalogs the dataset metadata is published too",
            "items": {
              "type": "object",
              "required": [
                "catalog",
                "status"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string"
                },
                "catalog": {
                  "type": "string",
                  "description": "L'identifiant du catalogue de destination de cette publication."
                },
                "status": {
                  "type": "string",
                  "description": "A simple flag to clearly identify the publications that were successful. If \"published\" then the targetUrl key should be defined, If \"error\" then the error key should be defined.",
                  "enum": [
                    "waiting",
                    "published",
                    "error",
                    "deleted"
                  ]
                },
                "publishedAt": {
                  "type": "string",
                  "description": "Date of the last update for this publication",
                  "format": "date-time"
                },
                "error": {
                  "type": "string"
                },
                "targetUrl": {
                  "type": "string"
                },
                "result": {
                  "type": "object",
                  "description": "The result of pushing the publication. The structure of this object is permissive and depends on the type of catalog"
                },
                "addToDataset": {
                  "type": "object",
                  "description": "Fill this object to create a new resource (or community resource) to an existing dataset.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                },
                "replaceDataset": {
                  "type": "object",
                  "description": "Fill this object to overwrite an existing dataset.",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "publicationSites": {
            "type": "array",
            "description": "References to all sites the dataset is exposed in.",
            "items": {
              "type": "string"
            }
          },
          "requestedPublicationSites": {
            "type": "array",
            "description": "References to all sites the dataset would be exposed in if validated by an admin.",
            "items": {
              "type": "string"
            }
          },
          "hasFiles": {
            "type": "boolean",
            "default": false,
            "description": "true when the dataset has attached files"
          },
          "attachmentsAsImage": {
            "type": "boolean",
            "default": false,
            "description": "Set to true to use attached files as illustrations of the line"
          },
          "isVirtual": {
            "type": "boolean",
            "default": false,
            "description": "Used to identify virtual datasets. A virtual datasets does not have data, only references to other datasets."
          },
          "virtual": {
            "type": "object",
            "description": "A configuration object dedicated to virtual datasets.",
            "required": [
              "children"
            ],
            "properties": {
              "children": {
                "type": "array",
                "description": "Array of ids of the children datasets",
                "items": {
                  "type": "string"
                }
              },
              "filters": {
                "type": "array",
                "description": "Array of static filters to always apply when querying the dataset",
                "items": {
                  "type": "object",
                  "required": [
                    "key",
                    "values"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "Key of the field in the schema"
                    },
                    "values": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "filterActiveAccount": {
                "type": "boolean"
              }
            }
          },
          "isRest": {
            "type": "boolean",
            "default": false,
            "description": "Used to identify REST datasets. A REST dataset is not created from a data file, but instead is based on a dynamic collection in a database."
          },
          "rest": {
            "type": "object",
            "description": "A configuration object dedicated to REST datasets.",
            "properties": {
              "ttl": {
                "type": "object",
                "required": [
                  "prop",
                  "delay"
                ],
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "prop": {
                    "type": "string"
                  },
                  "checkedAt": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "delay": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "integer",
                        "default": 0
                      },
                      "unit": {
                        "type": "string",
                        "enum": [
                          "hours",
                          "days",
                          "weeks",
                          "months"
                        ],
                        "default": "days"
                      }
                    }
                  }
                }
              },
              "history": {
                "type": "boolean",
                "default": false,
                "description": "Set to true to let data-fair store revisions of the lines in the dataset."
              },
              "historyTTL": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                  "active": {
                    "type": "boolean"
                  },
                  "delay": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "value": {
                        "type": "integer",
                        "default": 0
                      },
                      "unit": {
                        "type": "string",
                        "enum": [
                          "hours",
                          "days",
                          "weeks",
                          "months"
                        ],
                        "default": "days"
                      }
                    }
                  }
                }
              },
              "lineOwnership": {
                "type": "boolean"
              },
              "storeUpdatedBy": {
                "type": "boolean"
              },
              "primaryKeyMode": {
                "type": "string",
                "enum": [
                  "base64",
                  "sha256"
                ]
              },
              "indiceMode": {
                "type": "string",
                "enum": [
                  "timestamp1",
                  "timestamp2",
                  "timestamp3"
                ]
              }
            }
          },
          "isMetaOnly": {
            "type": "boolean",
            "default": false,
            "description": "Used to identify datasets without any local data and only some metadata."
          },
          "topics": {
            "type": "array",
            "title": "Liste de thématiques",
            "x-itemTitle": "title",
            "items": {
              "title": "Topic",
              "x-exports": [
                "types",
                "schema"
              ],
              "type": "object",
              "required": [
                "title"
              ],
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "string",
                  "readOnly": true
                },
                "title": {
                  "type": "string",
                  "title": "Titre",
                  "x-i18n-title": {
                    "en": "Title"
                  }
                },
                "color": {
                  "type": "string",
                  "title": "Couleur",
                  "x-i18n-title": {
                    "en": "Color"
                  },
                  "x-display": "color-picker",
                  "layout": {
                    "comp": "color-picker",
                    "cols": 6
                  }
                },
                "icon": {
                  "type": "object",
                  "title": "Icône",
                  "x-i18n-title": {
                    "en": "Icon"
                  },
                  "description": "Il est possible de consulter plus facilement la liste des icônes disponibles sur <a href='https://pictogrammers.com/library/mdi/' target='_blank'>ce site </a>.<br>Commencez à taper pour rechercher dans la collection complète d'icônes. Seuls quelques icônes sont chargées initialement pour de meilleures performances.",
                  "x-i18n-description": {
                    "en": "You can easily browse the list of available icons on this <a href='https://pictogrammers.com/library/mdi/' target='_blank'>this website</a>.<br>Start typing to search through the complete collection of icons. Only a few icons are loaded initially for better performance."
                  },
                  "x-fromUrl": "https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}",
                  "x-itemKey": "name",
                  "x-itemTitle": "name",
                  "x-itemIcon": "name",
                  "x-itemsProp": "results",
                  "layout": {
                    "getItems": {
                      "url": "https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}&select=name,svg&size=25",
                      "itemsResults": "data.results",
                      "itemTitle": "item.name",
                      "itemIcon": "item.svg",
                      "itemKey": "item.name"
                    },
                    "cols": 6
                  }
                }
              }
            }
          },
          "thumbnails": {
            "type": "object",
            "properties": {
              "resizeMode": {
                "type": "string",
                "description": "Define how the thumbnails will be adapted to the size requested by visualizations",
                "enum": [
                  "crop",
                  "smartCrop",
                  "fitIn"
                ],
                "default": "crop"
              }
            }
          },
          "exports": {
            "type": "object",
            "properties": {
              "restToCSV": {
                "type": "object",
                "properties": {
                  "active": {
                    "type": "boolean",
                    "default": false
                  },
                  "nextExport": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastExport": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "extras": {
            "type": "object",
            "description": "An object for extra content from client services of data-fair"
          },
          "analysis": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "escapeKeyAlgorithm": {
                "type": "string",
                "default": "slug",
                "enum": [
                  "legacy",
                  "slug"
                ]
              }
            }
          },
          "permissions": {
            "title": "Permissions",
            "x-exports": [
              "types",
              "validate",
              "resolvedSchema"
            ],
            "type": "array",
            "items": {
              "title": "Permission",
              "type": "object",
              "description": "Permission to do the operations (identified by their id). If type and id are not set, then the operation is set to public. roles array is used only with type organization",
              "additionalProperties": false,
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "user",
                    "organization"
                  ],
                  "description": "If the entity is a user or an organization"
                },
                "id": {
                  "type": "string",
                  "description": "Identifier of the entity"
                },
                "name": {
                  "type": "string",
                  "description": "Name of the entity"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user"
                },
                "department": {
                  "type": "string",
                  "description": "Identifier of the department or \"*\" for any department (same as empty) or \"-\" for no department"
                },
                "departmentName": {
                  "type": "string",
                  "description": "Name of the department"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "Role name"
                  }
                },
                "operations": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "API operation that can be used"
                  }
                },
                "classes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "API permission classes that can be used"
                  }
                }
              }
            },
            "＄defs": {
              "permission": {
                "title": "Permission",
                "type": "object",
                "description": "Permission to do the operations (identified by their id). If type and id are not set, then the operation is set to public. roles array is used only with type organization",
                "additionalProperties": false,
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "user",
                      "organization"
                    ],
                    "description": "If the entity is a user or an organization"
                  },
                  "id": {
                    "type": "string",
                    "description": "Identifier of the entity"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the entity"
                  },
                  "email": {
                    "type": "string",
                    "description": "Email of the user"
                  },
                  "department": {
                    "type": "string",
                    "description": "Identifier of the department or \"*\" for any department (same as empty) or \"-\" for no department"
                  },
                  "departmentName": {
                    "type": "string",
                    "description": "Name of the department"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Role name"
                    }
                  },
                  "operations": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "API operation that can be used"
                    }
                  },
                  "classes": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "API permission classes that can be used"
                    }
                  }
                }
              }
            }
          },
          "previews": {
            "type": "array",
            "title": "Prévisualisations",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "href": {
                  "type": "string"
                }
              }
            }
          },
          "readApiKey": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "active": {
                "type": "boolean",
                "title": "Activer l'accès par clé d'API"
              },
              "interval": {
                "type": "string",
                "title": "Durée de validité des clés",
                "oneOf": [
                  {
                    "const": "P1W",
                    "title": "1 semaine"
                  },
                  {
                    "const": "P1M",
                    "title": "1 mois"
                  },
                  {
                    "const": "P1Y",
                    "title": "1 année"
                  }
                ]
              },
              "expiresAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "x-display": "hidden"
              },
              "renewAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "x-display": "hidden"
              }
            }
          },
          "esWarning": {
            "type": [
              "string",
              "null"
            ],
            "enum": [
              "MissingIndex",
              "IndexHealthRed",
              "MissingIndexSettings",
              "ShardingRecommended"
            ]
          },
          "draftReason": {
            "type": "object",
            "title": "Why was the dataset switched in draft mode",
            "properties": {
              "key": {
                "type": "string",
                "enum": [
                  "manual",
                  "file-new",
                  "file-updated"
                ]
              },
              "message": {
                "type": "string"
              },
              "validationMode": {
                "type": "string",
                "enum": [
                  "never",
                  "always",
                  "compatible",
                  "compatibleOrCancel"
                ]
              }
            }
          },
          "nonBlockingValidation": {
            "type": "boolean"
          },
          "draft": {
            "title": "Dataset draft",
            "description": "Some properties waiting for confirmation before being merged into the main dataset info",
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "draftReason": {
                "type": "object",
                "title": "Why was the dataset switched in draft mode",
                "properties": {
                  "key": {
                    "type": "string",
                    "enum": [
                      "manual",
                      "file-new",
                      "file-updated"
                    ]
                  },
                  "message": {
                    "type": "string"
                  },
                  "validationMode": {
                    "type": "string",
                    "enum": [
                      "never",
                      "always",
                      "compatible",
                      "compatibleOrCancel"
                    ]
                  }
                }
              },
              "validateDraft": {
                "type": "boolean",
                "title": "indicates that the draft was validated and is being processed to replace the current state"
              },
              "file": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "size",
                  "mimetype",
                  "schema"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the file that was used to create or update this dataset"
                  },
                  "size": {
                    "type": "number",
                    "description": "Size of the file on disk"
                  },
                  "encoding": {
                    "type": "string",
                    "description": "Encoding of the file"
                  },
                  "mimetype": {
                    "type": "string",
                    "description": "Mime type of the file"
                  },
                  "schema": {
                    "type": "array",
                    "description": "JSON schema properties of the fields in the file",
                    "items": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "separator": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "dateFormat": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "dateTimeFormat": {
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "timeZone": {
                          "type": [
                            "string",
                            "null"
                          ]
                        }
                      }
                    }
                  },
                  "props": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "numLines": {
                        "type": "number",
                        "description": "Number of lines this file has."
                      },
                      "linesDelimiter": {
                        "type": "string",
                        "description": "New line character or characters (can be \r\n))"
                      },
                      "fieldsDelimiter": {
                        "type": "string",
                        "description": "Fields delimiter"
                      },
                      "escapeChar": {
                        "type": "string",
                        "description": "Character used to escape string"
                      },
                      "quote": {
                        "type": "string",
                        "description": "Character used to wrap strings"
                      }
                    }
                  }
                }
              },
              "originalFile": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "name",
                  "size",
                  "mimetype"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the file that was used to create or update this dataset"
                  },
                  "size": {
                    "type": "number",
                    "description": "Size of the file on disk"
                  },
                  "encoding": {
                    "type": "string",
                    "description": "Encoding of the file"
                  },
                  "mimetype": {
                    "type": "string",
                    "description": "Mime type of the file"
                  },
                  "md5": {
                    "type": "string",
                    "description": "MD5 hash of the file content"
                  }
                }
              },
              "schema": {
                "type": "array",
                "description": "JSON schema properties of the fields",
                "items": {
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "type": "string",
                      "readOnly": true,
                      "x-display": "hidden"
                    },
                    "type": {
                      "type": "string"
                    },
                    "format": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-originalName": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "x-group": {
                      "type": "string"
                    },
                    "x-refersTo": {
                      "deprecated": true,
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "x-concept": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "primary": {
                          "type": "boolean"
                        }
                      }
                    },
                    "x-calculated": {
                      "type": "boolean"
                    },
                    "x-capabilities": {
                      "type": "object",
                      "properties": {
                        "index": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Filtrable sur valeur exacte",
                          "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels des filtres sur valeurs exactes ont peu de sens."
                        },
                        "values": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Triable et groupable",
                          "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels trier ou grouper par valeur a peu de sens."
                        },
                        "textStandard": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Texte analysé pour recherche textuelle",
                          "description": "Désactivez cette capacité dans le cas d'un code, une url, etc. N'importe quel contenu sur lequel la recherche de mots a peu de sens."
                        },
                        "text": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Texte analysé spécifiquement pour la langue française",
                          "description": "Désactivez cette capacité pour tout contenu qui n'est pas en langue française ou pour lequel la recherche de mots a peu de sens."
                        },
                        "textAgg": {
                          "type": "boolean",
                          "default": false,
                          "x-display": "switch",
                          "title": "Statistiques de mots",
                          "description": "Activez cette capacité si avez l'intention d'obtenir des statistiques sur les occurrences de mots (par exemple pour construire un nuage de mot)."
                        },
                        "wildcard": {
                          "type": "boolean",
                          "default": false,
                          "x-display": "switch",
                          "title": "Texte filtrable sur groupe de caractères",
                          "description": "Activez cette capacité si vous avez l'intention de filtrer ce contenu spécifiquement sur une suite de caractères (par exemple si un filtre sur mots entiers ou sur valeur exacte ne convient pas)."
                        },
                        "insensitive": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Tri amélioré avec casse et accents",
                          "description": "Désactivez cette capacité si le contenu ne sera pas utilisé pour du tri ou bien si il ne contient pas de variations avec accents et majuscules."
                        },
                        "geoShape": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Formes géométriques complexes",
                          "description": "Désactivez cette capacité si la donnée ne contient que des géométries basiques de points ou bien si requêter les géométries uniquement à partir de leurs centroïdes est suffisant pour vos besoins."
                        },
                        "vtPrepare": {
                          "type": "boolean",
                          "default": false,
                          "x-display": "switch",
                          "title": "Tuiles vectorielles préparées",
                          "description": "Activez cette capacité pour précalculer des éléments utiles à la construction de tuiles vectorielles pour le rendu cartographique du jeu de données. Activez cette option si le jeu de données contient des données géogreaphiques denses à afficher en grande quantité. La contre-partie est une augmentation du temps d'indexation et du volume de données indexées."
                        },
                        "indexAttachment": {
                          "type": "boolean",
                          "default": true,
                          "x-display": "switch",
                          "title": "Contenu des pièces jointes analysé pour recherche textuelle",
                          "description": "Désactivez cette option si vous souhaitez que les pièces jointes soient simplement téléchargeables et que l'extraction de leur contenu textuel pour recherche de mots n'est pas pertinente."
                        }
                      }
                    },
                    "x-labels": {
                      "type": "object",
                      "patternProperties": {
                        "．*": {
                          "type": "string"
                        }
                      }
                    },
                    "x-labelsRestricted": {
                      "type": "boolean"
                    },
                    "readOnly": {
                      "type": "boolean"
                    },
                    "x-required": {
                      "type": "boolean"
                    },
                    "minLength": {
                      "type": "integer"
                    },
                    "maxLength": {
                      "type": "integer"
                    },
                    "minimum": {
                      "type": "number"
                    },
                    "maximum": {
                      "type": "number"
                    },
                    "pattern": {
                      "type": "string",
                      "format": "regex"
                    },
                    "patternErrorMessage": {
                      "type": "string"
                    },
                    "x-master": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "remoteService": {
                          "type": "string",
                          "description": "L'identifiant du service distant utilisé pour l'enrichissement"
                        },
                        "action": {
                          "type": "string",
                          "description": "L'identifiant de l'action du service distant à utiliser pour l'enrichissement"
                        }
                      }
                    },
                    "x-display": {
                      "type": "string"
                    },
                    "enum": {
                      "type": "array",
                      "readOnly": true,
                      "description": "This differs from JSON schema. It is not a restriction, just and observation of the values that are present in the dataset."
                    },
                    "x-cardinality": {
                      "type": "integer",
                      "description": "The number of distinct values for this field",
                      "readOnly": true
                    },
                    "x-transform": {
                      "type": "object",
                      "description": "Transformation to apply to the field",
                      "properties": {
                        "expr": {
                          "type": "string"
                        },
                        "examples": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "type": {
                          "type": "string"
                        },
                        "format": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "description": {
                "type": "string",
                "description": "Detailed description of the dataset"
              },
              "title": {
                "type": "string",
                "description": "Short title of the dataset"
              },
              "license": {
                "type": "object",
                "additionalProperties": false,
                "required": [
                  "title",
                  "href"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Short title for the license"
                  },
                  "href": {
                    "type": "string",
                    "description": "The URL where the license can be read"
                  }
                }
              },
              "origin": {
                "type": "string",
                "description": "The URL where the original data can be found"
              },
              "estensions": {
                "type": "array",
                "description": "Définition des enrichissements appliqués à ce jeu de données",
                "items": {
                  "type": "object",
                  "properties": {
                    "active": {
                      "type": "boolean",
                      "description": "Toggle on and off the extension"
                    },
                    "needsUpdate": {
                      "type": "boolean"
                    },
                    "autoUpdate": {
                      "type": "boolean"
                    },
                    "nextUpdate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "oneOf": [
                    {
                      "required": [
                        "type",
                        "expr",
                        "property"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "exprEval"
                        },
                        "expr": {
                          "type": "string"
                        },
                        "property": {
                          "type": "object",
                          "required": [
                            "key",
                            "type"
                          ],
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    {
                      "required": [
                        "type",
                        "remoteService",
                        "action"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "const": "remoteService"
                        },
                        "remoteService": {
                          "type": "string",
                          "description": "L'identifiant du service distant utilisé pour l'enrichissement"
                        },
                        "action": {
                          "type": "string",
                          "description": "L'identifiant de l'action du service distant à utiliser pour l'enrichissement"
                        },
                        "select": {
                          "type": "array",
                          "description": "La liste des colonnes à sélectionner dans le retour du service distant. Toutes les colonnes si absent ou vide.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "overwriteProperties": {
                          "type": "object",
                          "description": "Les attributs à surcharger sur les proprités résultats de l'enrichissement",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "x-originalName": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "shortId": {
                          "type": "string",
                          "description": "Id court (déprécié)",
                          "readOnly": true
                        },
                        "propertyPrefix": {
                          "type": "string",
                          "description": "Chaine à utiliser comme préfixe des clés de champs issus de cette extension"
                        }
                      }
                    }
                  ]
                }
              },
              "publications": {
                "type": "array",
                "description": "References to all the catalogs the dataset metadata is published too",
                "items": {
                  "type": "object",
                  "required": [
                    "catalog",
                    "status"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "catalog": {
                      "type": "string",
                      "description": "L'identifiant du catalogue de destination de cette publication."
                    },
                    "status": {
                      "type": "string",
                      "description": "A simple flag to clearly identify the publications that were successful. If \"published\" then the targetUrl key should be defined, If \"error\" then the error key should be defined.",
                      "enum": [
                        "waiting",
                        "published",
                        "error",
                        "deleted"
                      ]
                    },
                    "publishedAt": {
                      "type": "string",
                      "description": "Date of the last update for this publication",
                      "format": "date-time"
                    },
                    "error": {
                      "type": "string"
                    },
                    "targetUrl": {
                      "type": "string"
                    },
                    "result": {
                      "type": "object",
                      "description": "The result of pushing the publication. The structure of this object is permissive and depends on the type of catalog"
                    },
                    "addToDataset": {
                      "type": "object",
                      "description": "Fill this object to create a new resource (or community resource) to an existing dataset.",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    },
                    "replaceDataset": {
                      "type": "object",
                      "description": "Fill this object to overwrite an existing dataset.",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "publicationSites": {
                "type": "array",
                "description": "References to all sites the dataset is exposed in.",
                "items": {
                  "type": "string"
                }
              },
              "virtual": {
                "type": "object",
                "description": "A configuration object dedicated to virtual datasets.",
                "required": [
                  "children"
                ],
                "properties": {
                  "children": {
                    "type": "array",
                    "description": "Array of ids of the children datasets",
                    "items": {
                      "type": "string"
                    }
                  },
                  "filters": {
                    "type": "array",
                    "description": "Array of static filters to always apply when querying the dataset",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "values"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "description": "Key of the field in the schema"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "filterActiveAccount": {
                    "type": "boolean"
                  }
                }
              },
              "rest": {
                "type": "object",
                "description": "A configuration object dedicated to REST datasets.",
                "properties": {
                  "ttl": {
                    "type": "object",
                    "required": [
                      "prop",
                      "delay"
                    ],
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "prop": {
                        "type": "string"
                      },
                      "checkedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "delay": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "integer",
                            "default": 0
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "hours",
                              "days",
                              "weeks",
                              "months"
                            ],
                            "default": "days"
                          }
                        }
                      }
                    }
                  },
                  "history": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to let data-fair store revisions of the lines in the dataset."
                  },
                  "historyTTL": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "active": {
                        "type": "boolean"
                      },
                      "delay": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "value": {
                            "type": "integer",
                            "default": 0
                          },
                          "unit": {
                            "type": "string",
                            "enum": [
                              "hours",
                              "days",
                              "weeks",
                              "months"
                            ],
                            "default": "days"
                          }
                        }
                      }
                    }
                  },
                  "lineOwnership": {
                    "type": "boolean"
                  },
                  "storeUpdatedBy": {
                    "type": "boolean"
                  },
                  "primaryKeyMode": {
                    "type": "string",
                    "enum": [
                      "base64",
                      "sha256"
                    ]
                  },
                  "indiceMode": {
                    "type": "string",
                    "enum": [
                      "timestamp1",
                      "timestamp2",
                      "timestamp3"
                    ]
                  }
                }
              },
              "extras": {
                "type": "object",
                "description": "An object for extra content from client services of data-fair"
              },
              "attachmentsAsImage": {
                "type": "boolean",
                "default": false,
                "description": "Set to true to use attached files as illustrations of the line"
              },
              "projection": {
                "type": "object",
                "description": "The cartographic projection of this dataset. Refers to the list of supported projections in contract/projections.json",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "code": {
                    "type": "string"
                  }
                }
              },
              "attachments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "properties": {
                    "title": {
                      "type": "string",
                      "title": "Titre",
                      "x-props": {
                        "outlined": true,
                        "dense": true
                      }
                    },
                    "description": {
                      "type": "string",
                      "title": "Description",
                      "x-display": "markdown"
                    },
                    "includeInCatalogPublications": {
                      "type": "boolean",
                      "title": "Inclure dans les publications sur catalogue",
                      "default": false
                    }
                  },
                  "oneOf": [
                    {
                      "title": "Fichier",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "type": {
                          "title": "Type de pièce jointe",
                          "const": "file"
                        },
                        "name": {
                          "x-display": "hidden",
                          "type": "string",
                          "description": "Name of the file that was used to create or update this attachment"
                        },
                        "size": {
                          "x-display": "hidden",
                          "type": "number",
                          "description": "Size of the file on disk"
                        },
                        "mimetype": {
                          "x-display": "hidden",
                          "type": "string",
                          "description": "Mime type of the file"
                        },
                        "updatedAt": {
                          "x-display": "hidden",
                          "type": "string",
                          "description": "Date of the last update for this attachment",
                          "format": "date-time"
                        },
                        "url": {
                          "x-display": "hidden",
                          "readOnly": true,
                          "type": "string",
                          "title": "URL"
                        }
                      }
                    },
                    {
                      "title": "Lien",
                      "required": [
                        "url"
                      ],
                      "properties": {
                        "type": {
                          "title": "Type de pièce jointe",
                          "const": "url"
                        },
                        "url": {
                          "type": "string",
                          "title": "URL"
                        }
                      }
                    },
                    {
                      "title": "Fichier récupéré depuis une URL",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "type": {
                          "title": "Type de pièce jointe",
                          "const": "remoteFile"
                        },
                        "name": {
                          "type": "string",
                          "title": "Nom du fichier",
                          "description": "Ce nom doit contenir l'extension qui doit correspondre au format du fichier téléchargé.",
                          "x-rules": [
                            "hasExtension"
                          ]
                        },
                        "targetUrl": {
                          "type": "string",
                          "title": "URL de téléchargement",
                          "description": "Cette URL n'est pas consultable après écriture. Elle est utilisée pour télécharger le fichier depuis un service distant et peut contenir un secret. Vous pouvez la laisser vide quand vous modifiez les autres informations, mais vous devez la renseigner de nouveau si vous changez le nom de fichier."
                        }
                      }
                    }
                  ]
                }
              },
              "topics": {
                "type": "array",
                "title": "Liste de thématiques",
                "x-itemTitle": "title",
                "items": {
                  "title": "Topic",
                  "x-exports": [
                    "types",
                    "schema"
                  ],
                  "type": "object",
                  "required": [
                    "title"
                  ],
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true
                    },
                    "title": {
                      "type": "string",
                      "title": "Titre",
                      "x-i18n-title": {
                        "en": "Title"
                      }
                    },
                    "color": {
                      "type": "string",
                      "title": "Couleur",
                      "x-i18n-title": {
                        "en": "Color"
                      },
                      "x-display": "color-picker",
                      "layout": {
                        "comp": "color-picker",
                        "cols": 6
                      }
                    },
                    "icon": {
                      "type": "object",
                      "title": "Icône",
                      "x-i18n-title": {
                        "en": "Icon"
                      },
                      "description": "Il est possible de consulter plus facilement la liste des icônes disponibles sur <a href='https://pictogrammers.com/library/mdi/' target='_blank'>ce site </a>.<br>Commencez à taper pour rechercher dans la collection complète d'icônes. Seuls quelques icônes sont chargées initialement pour de meilleures performances.",
                      "x-i18n-description": {
                        "en": "You can easily browse the list of available icons on this <a href='https://pictogrammers.com/library/mdi/' target='_blank'>this website</a>.<br>Start typing to search through the complete collection of icons. Only a few icons are loaded initially for better performance."
                      },
                      "x-fromUrl": "https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}",
                      "x-itemKey": "name",
                      "x-itemTitle": "name",
                      "x-itemIcon": "name",
                      "x-itemsProp": "results",
                      "layout": {
                        "getItems": {
                          "url": "https://koumoul.com/data-fair/api/v1/datasets/icons-mdi-latest/lines?q={q}&select=name,svg&size=25",
                          "itemsResults": "data.results",
                          "itemTitle": "item.name",
                          "itemIcon": "item.svg",
                          "itemKey": "item.name"
                        },
                        "cols": 6
                      }
                    }
                  }
                }
              },
              "thumbnails": {
                "type": "object",
                "properties": {
                  "resizeMode": {
                    "type": "string",
                    "description": "Define how the thumbnails will be adapted to the size requested by visualizations",
                    "enum": [
                      "crop",
                      "smartCrop",
                      "fitIn"
                    ],
                    "default": "crop"
                  }
                }
              },
              "masterData": {
                "type": "object",
                "title": "Données de référence",
                "properties": {
                  "bulkSearchs": {
                    "type": "array",
                    "title": "Récupération de lignes en masse",
                    "x-class": "my-4",
                    "x-options": {
                      "editMode": "dialog"
                    },
                    "items": {
                      "type": "object",
                      "required": [
                        "title"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Identifiant",
                          "x-if": "parent.value.id",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "title": "Titre",
                          "x-props": {
                            "placeholder": "exemple \"récupérer les informations de plusieurs produits\""
                          },
                          "minLength": 3
                        },
                        "description": {
                          "type": "string",
                          "title": "Description",
                          "x-display": "textarea",
                          "x-props": {
                            "placeholder": "exemple \"cet enrichissement vous permet de récupérer les informations de plusieurs produits à partir d'une liste de codes produits.\""
                          }
                        },
                        "filters": {
                          "type": "array",
                          "title": "Filtres statiques",
                          "x-class": "mb-4",
                          "x-options": {
                            "editMode": "inline"
                          },
                          "items": {
                            "type": "object",
                            "required": [
                              "property",
                              "values"
                            ],
                            "properties": {
                              "property": {
                                "type": "object",
                                "title": "Propriété sur laquelle appliquer le filtre",
                                "x-fromData": "context.filterProperties",
                                "x-itemTitle": "title",
                                "x-itemKey": "key"
                              },
                              "values": {
                                "type": "array",
                                "title": "Valeurs",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "input": {
                          "type": "array",
                          "title": "Méthodes de correspondance",
                          "x-class": "mb-4",
                          "minItems": 1,
                          "x-options": {
                            "editMode": "inline"
                          },
                          "items": {
                            "type": "object",
                            "required": [
                              "type",
                              "property"
                            ],
                            "oneOf": [
                              {
                                "title": "Valeurs exactement égales",
                                "required": [
                                  "type",
                                  "property"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "equals",
                                    "title": "Type de méthode de correspondance"
                                  },
                                  "property": {
                                    "type": "object",
                                    "title": "Propriété comparée",
                                    "x-fromData": "context.propertiesWithConcepts",
                                    "x-itemTitle": "title",
                                    "x-itemKey": "key"
                                  }
                                }
                              },
                              {
                                "title": "Date dans un interval",
                                "x-if": "context.hasDateIntervalConcepts",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "date-in-interval"
                                  },
                                  "property": {
                                    "type": "object",
                                    "title": "Date à renseigner",
                                    "properties": {
                                      "x-refersTo": {
                                        "type": "string",
                                        "const": "http://schema.org/Date"
                                      },
                                      "key": {
                                        "type": "string",
                                        "const": "_date"
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "string"
                                      },
                                      "format": {
                                        "type": "string",
                                        "const": "date-time"
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "title": "Coordonnée géographique à proximité",
                                "x-if": "context.dataset.bbox",
                                "required": [
                                  "type",
                                  "distance"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "const": "geo-distance"
                                  },
                                  "distance": {
                                    "type": "integer",
                                    "title": "Distance",
                                    "default": 0
                                  },
                                  "property": {
                                    "type": "object",
                                    "title": "Point à renseigner",
                                    "properties": {
                                      "x-refersTo": {
                                        "type": "string",
                                        "const": "http://www.w3.org/2003/01/geo/wgs84_pos#lat_long"
                                      },
                                      "key": {
                                        "type": "string",
                                        "const": "_geopoint"
                                      },
                                      "type": {
                                        "type": "string",
                                        "const": "string"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "sort": {
                          "type": "string",
                          "title": "Tri pour choisir parmi des résultats ambigus",
                          "description": "\nRemarque : ce paramètre est optionnel et utile uniquement si la manière d'établir une correspondance est susceptible de retourner plusieurs résultats par ligne.\n\nLe tri est exprimé sous forme d'une liste de clés de colonnes séparées par des virgules. Par défaut le tri est ascendant, si un nom de colonne est préfixé par un \"-\" alors le tri sera descendant.\n\nExemple: ma_colonne,-ma_colonne2"
                        }
                      }
                    }
                  },
                  "singleSearchs": {
                    "type": "array",
                    "title": "Recherche de paires code / libellé",
                    "x-class": "mb-4",
                    "x-options": {
                      "editMode": "dialog"
                    },
                    "items": {
                      "type": "object",
                      "required": [
                        "title",
                        "output"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "title": "Identifiant",
                          "x-if": "parent.value.id",
                          "readOnly": true
                        },
                        "title": {
                          "type": "string",
                          "title": "Titre",
                          "x-props": {
                            "placeholder": "exemple \"recherche d'un produit\""
                          },
                          "minLength": 3
                        },
                        "description": {
                          "type": "string",
                          "title": "Description",
                          "x-display": "textarea",
                          "x-props": {
                            "placeholder": "exemple \"récupérez un code produit en effectuant une recherche dans son code ou son libellé\""
                          }
                        },
                        "output": {
                          "type": "object",
                          "title": "Propriété à retourner (code)",
                          "x-fromData": "context.propertiesWithConcepts",
                          "x-itemTitle": "title",
                          "x-itemKey": "key"
                        },
                        "label": {
                          "type": "object",
                          "title": "Propriété utilisée pour la recherche (libellé)",
                          "x-fromData": "context.stringProperties",
                          "x-itemTitle": "title",
                          "x-itemKey": "key"
                        },
                        "filters": {
                          "type": "array",
                          "title": "Filtres statiques",
                          "x-class": "mb-4",
                          "x-options": {
                            "editMode": "inline"
                          },
                          "items": {
                            "type": "object",
                            "required": [
                              "property",
                              "values"
                            ],
                            "properties": {
                              "property": {
                                "type": "object",
                                "title": "Propriété sur laquelle appliquer le filtre",
                                "x-fromData": "context.filterProperties",
                                "x-itemTitle": "title",
                                "x-itemKey": "key"
                              },
                              "values": {
                                "type": "array",
                                "title": "Valeurs",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "virtualDatasets": {
                    "type": "object",
                    "x-class": "mt-4",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "title": "Création de jeux virtuels"
                      }
                    }
                  },
                  "standardSchema": {
                    "type": "object",
                    "x-class": "mt-4",
                    "properties": {
                      "active": {
                        "type": "boolean",
                        "title": "Initialisation de jeux éditables"
                      }
                    }
                  }
                }
              },
              "primaryKey": {
                "type": "array",
                "description": "List of properties of the schema used as unique primary key for each line",
                "items": {
                  "type": "string"
                }
              },
              "image": {
                "type": "string",
                "description": "URL d'une image, illustration du jeu de données"
              },
              "spatial": {
                "type": "string",
                "description": "spatial coverage"
              },
              "temporal": {
                "type": "object",
                "description": "temporal coverage",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date"
                  },
                  "end": {
                    "type": "string",
                    "format": "date"
                  }
                }
              },
              "keywords": {
                "type": "array",
                "description": "keywords",
                "items": {
                  "type": "string"
                }
              },
              "frequency": {
                "type": "string",
                "description": "update frequency",
                "enum": [
                  "",
                  "triennial",
                  "biennial",
                  "annual",
                  "semiannual",
                  "threeTimesAYear",
                  "quarterly",
                  "bimonthly",
                  "monthly",
                  "semimonthly",
                  "biweekly",
                  "threeTimesAMonth",
                  "weekly",
                  "semiweekly",
                  "threeTimesAWeek",
                  "daily",
                  "continuous",
                  "irregular"
                ]
              }
            }
          }
        },
        "＄id": "https://github.com/data-fair/data-fair/dataset-resolved",
        "＄defs": {
          "schemaProperty": {
            "type": "object",
            "required": [
              "key"
            ],
            "properties": {
              "key": {
                "type": "string",
                "readOnly": true,
                "x-display": "hidden"
              },
              "type": {
                "type": "string"
              },
              "format": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "x-originalName": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "icon": {
                "type": "string"
              },
              "x-group": {
                "type": "string"
              },
              "x-refersTo": {
                "deprecated": true,
                "type": [
                  "string",
                  "null"
                ]
              },
              "x-concept": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "primary": {
                    "type": "boolean"
                  }
                }
              },
              "x-calculated": {
                "type": "boolean"
              },
              "x-capabilities": {
                "type": "object",
                "properties": {
                  "index": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Filtrable sur valeur exacte",
                    "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels des filtres sur valeurs exactes ont peu de sens."
                  },
                  "values": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Triable et groupable",
                    "description": "Désactivez cette capacité si la donnée contient par exemple des textes longs pour lesquels trier ou grouper par valeur a peu de sens."
                  },
                  "textStandard": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Texte analysé pour recherche textuelle",
                    "description": "Désactivez cette capacité dans le cas d'un code, une url, etc. N'importe quel contenu sur lequel la recherche de mots a peu de sens."
                  },
                  "text": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Texte analysé spécifiquement pour la langue française",
                    "description": "Désactivez cette capacité pour tout contenu qui n'est pas en langue française ou pour lequel la recherche de mots a peu de sens."
                  },
                  "textAgg": {
                    "type": "boolean",
                    "default": false,
                    "x-display": "switch",
                    "title": "Statistiques de mots",
                    "description": "Activez cette capacité si avez l'intention d'obtenir des statistiques sur les occurrences de mots (par exemple pour construire un nuage de mot)."
                  },
                  "wildcard": {
                    "type": "boolean",
                    "default": false,
                    "x-display": "switch",
                    "title": "Texte filtrable sur groupe de caractères",
                    "description": "Activez cette capacité si vous avez l'intention de filtrer ce contenu spécifiquement sur une suite de caractères (par exemple si un filtre sur mots entiers ou sur valeur exacte ne convient pas)."
                  },
                  "insensitive": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Tri amélioré avec casse et accents",
                    "description": "Désactivez cette capacité si le contenu ne sera pas utilisé pour du tri ou bien si il ne contient pas de variations avec accents et majuscules."
                  },
                  "geoShape": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Formes géométriques complexes",
                    "description": "Désactivez cette capacité si la donnée ne contient que des géométries basiques de points ou bien si requêter les géométries uniquement à partir de leurs centroïdes est suffisant pour vos besoins."
                  },
                  "vtPrepare": {
                    "type": "boolean",
                    "default": false,
                    "x-display": "switch",
                    "title": "Tuiles vectorielles préparées",
                    "description": "Activez cette capacité pour précalculer des éléments utiles à la construction de tuiles vectorielles pour le rendu cartographique du jeu de données. Activez cette option si le jeu de données contient des données géogreaphiques denses à afficher en grande quantité. La contre-partie est une augmentation du temps d'indexation et du volume de données indexées."
                  },
                  "indexAttachment": {
                    "type": "boolean",
                    "default": true,
                    "x-display": "switch",
                    "title": "Contenu des pièces jointes analysé pour recherche textuelle",
                    "description": "Désactivez cette option si vous souhaitez que les pièces jointes soient simplement téléchargeables et que l'extraction de leur contenu textuel pour recherche de mots n'est pas pertinente."
                  }
                }
              },
              "x-labels": {
                "type": "object",
                "patternProperties": {
                  "．*": {
                    "type": "string"
                  }
                }
              },
              "x-labelsRestricted": {
                "type": "boolean"
              },
              "readOnly": {
                "type": "boolean"
              },
              "x-required": {
                "type": "boolean"
              },
              "minLength": {
                "type": "integer"
              },
              "maxLength": {
                "type": "integer"
              },
              "minimum": {
                "type": "number"
              },
              "maximum": {
                "type": "number"
              },
              "pattern": {
                "type": "string",
                "format": "regex"
              },
              "patternErrorMessage": {
                "type": "string"
              },
              "x-master": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  },
                  "remoteService": {
                    "type": "string",
                    "description": "L'identifiant du service distant utilisé pour l'enrichissement"
                  },
                  "action": {
                    "type": "string",
                    "description": "L'identifiant de l'action du service distant à utiliser pour l'enrichissement"
                  }
                }
              },
              "x-display": {
                "type": "string"
              },
              "enum": {
                "type": "array",
                "readOnly": true,
                "description": "This differs from JSON schema. It is not a restriction, just and observation of the values that are present in the dataset."
              },
              "x-cardinality": {
                "type": "integer",
                "description": "The number of distinct values for this field",
                "readOnly": true
              },
              "x-transform": {
                "type": "object",
                "description": "Transformation to apply to the field",
                "properties": {
                  "expr": {
                    "type": "string"
                  },
                  "examples": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string"
                  },
                  "format": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [],
  "servers": [
    {
      "url": "https://data.ademe.fr/data-fair/api/v1/datasets/liste-des-entreprises-rge-2",
      "description": "Jeu de données Data Fair - data.ademe.fr - Liste des entreprises RGE"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "Lire les informations",
        "description": "Récupérer les informations du jeu de données.",
        "operationId": "readDescription",
        "x-permissionClass": "read",
        "tags": [
          "Métadonnées"
        ],
        "responses": {
          "200": {
            "description": "Les informations du jeu de données",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/datasetSchema"
                }
              }
            }
          }
        }
      }
    },
    "/lines": {
      "get": {
        "summary": "Lire les lignes",
        "description": "Requêter les lignes du jeu de données.",
        "operationId": "readLines",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "after",
            "description": "Pagination en profondeur. Automatiquement renseigné par la propriété next du résultat de la requête précédente",
            "schema": {
              "title": "Pagination en profondeur",
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "page",
            "description": "Le numéro de la page (indice de la pagination). Débute à 1. *Pour paginer sur de gros volumes de données utilisez plutôt le paramètre **after***",
            "schema": {
              "title": "Numéro de la page",
              "type": "integer",
              "default": 1
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Le nombre de résultats à retourner (taille de la pagination).",
            "schema": {
              "title": "Taille de la pagination",
              "default": 12,
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "\nLe tri à effectuer sous forme d'une liste de clés de colonnes séparées par des virgules.\n\nPar défaut le tri est ascendant, si un nom de colonne est préfixé par un \"-\" alors le tri sera descendant.\n\nExemple: ma_colonne,-ma_colonne2",
            "schema": {
              "title": "Ordre des résultats",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "select",
            "description": "La liste des colonnes à retourner",
            "schema": {
              "title": "La liste des colonnes à retourner",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              },
              "default": "all"
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "highlight",
            "description": "\nDemande à retourner des extraits du document qui contiennent les mots utilisés en filtre (paramètres q et qs).\n\nLa valeur est une liste de colonnes séparées par des virgules.\n    ",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "sampling",
            "description": "\n  **Uniquement avec le paramètre de tuilage xyz**. Configure le mode d'échantillonage des resultats pour privilégier soit l'exhaustivité des données soit une densité plus homogène sur la carte.\n  \n    - **neighbors** (défaut) : utilise la densité maximale parmi les tuiles voisines pour réduire la densité de la tuile courante au même niveau d'échantillonage (couteux en performance).\n    - **max** : retourne le maximum (limité par le paramètre size) de résultat pour chaque tuile.\n      ",
            "schema": {
              "type": "string",
              "enum": [
                null,
                "neighbors",
                "max"
              ]
            }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Le format de sérialisation de la donnée.\n  \n  - **json** (défaut)\n  - **csv** pour format compatibles tableurs\n  - **pbf** pour tuiles vectorielles\n  - **geojson** et **wkt** pour formats géographiques",
            "schema": {
              "title": "Format de sérialisation",
              "default": "json",
              "type": "string",
              "enum": [
                "json",
                "csv",
                "xlsx",
                "ods",
                "pbf",
                "geojson",
                "wkt"
              ]
            }
          },
          {
            "in": "query",
            "name": "html",
            "description": "Effectuer le rendu des contenus formattés de **markdown** vers **HTML**",
            "schema": {
              "title": "Rendu HTML des contenus markdown",
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "collapse",
            "description": "Afficher une ligne de résultat par valeur distince d'un champ",
            "schema": {
              "type": "string",
              "enum": [
                null,
                "siret",
                "nom_entreprise",
                "adresse",
                "code_postal",
                "commune",
                "telephone",
                "email",
                "site_internet",
                "code_qualification",
                "nom_qualification",
                "url_qualification",
                "nom_certificat",
                "domaine",
                "meta_domaine",
                "organisme"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le résultat de la requête",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "description": "Le nombre total de résultat si on ignore la pagination"
                    },
                    "results": {
                      "type": "array",
                      "description": "Le tableau de résultats",
                      "items": {
                        "type": "object",
                        "required": [],
                        "properties": {
                          "siret": {
                            "title": "SIRET",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://www.datatourisme.fr/ontology/core/1.0/#siret",
                            "x-cardinality": 63081,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "siret",
                              "title": "SIRET",
                              "primary": true
                            }
                          },
                          "nom_entreprise": {
                            "title": "Nom de l’entreprise",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://www.w3.org/2000/01/rdf-schema#label",
                            "x-cardinality": 62253,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "label",
                              "title": "Libellé",
                              "primary": true
                            }
                          },
                          "adresse": {
                            "title": "Adresse de l'entreprise",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://schema.org/address",
                            "x-cardinality": 62558,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "address",
                              "title": "Adresse",
                              "primary": true
                            }
                          },
                          "code_postal": {
                            "title": "Code postal",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://schema.org/postalCode",
                            "x-cardinality": 5958,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "postalCode",
                              "title": "Code postal",
                              "primary": true
                            }
                          },
                          "commune": {
                            "title": "Commune",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://schema.org/City",
                            "x-cardinality": 19274,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "city",
                              "title": "Commune",
                              "primary": true
                            }
                          },
                          "latitude": {
                            "title": "Latitude",
                            "type": "number",
                            "description": "",
                            "x-refersTo": "http://schema.org/latitude",
                            "x-capabilities": {},
                            "x-concept": {
                              "id": "latitude",
                              "title": "Latitude",
                              "primary": true
                            }
                          },
                          "longitude": {
                            "title": "Longitude",
                            "type": "number",
                            "description": "",
                            "x-refersTo": "http://schema.org/longitude",
                            "x-capabilities": {},
                            "x-concept": {
                              "id": "longitude",
                              "title": "Longitude",
                              "primary": true
                            }
                          },
                          "telephone": {
                            "title": "Téléphone",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "https://www.w3.org/2006/vcard/ns#tel",
                            "x-cardinality": 58794,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "tel",
                              "title": "N° de téléphone",
                              "primary": true
                            }
                          },
                          "email": {
                            "title": "E-mail",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "https://www.w3.org/2006/vcard/ns#email",
                            "x-cardinality": 61271,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "email",
                              "title": "Adresse e-mail",
                              "primary": true
                            }
                          },
                          "site_internet": {
                            "title": "Site internet",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "https://schema.org/WebPage",
                            "x-cardinality": 36731,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "x-concept": {
                              "id": "webPage",
                              "title": "Page Web",
                              "primary": true
                            }
                          },
                          "code_qualification": {
                            "title": "Code qualification",
                            "type": "string",
                            "description": "",
                            "x-cardinality": 460,
                            "x-capabilities": {
                              "textAgg": true
                            }
                          },
                          "nom_qualification": {
                            "title": "Nom de la qualification",
                            "type": "string",
                            "description": "",
                            "x-cardinality": 467,
                            "x-capabilities": {
                              "textAgg": true
                            }
                          },
                          "url_qualification": {
                            "title": "URL qualification",
                            "type": "string",
                            "description": "",
                            "x-refersTo": "http://schema.org/DigitalDocument",
                            "x-cardinality": 74870,
                            "x-capabilities": {},
                            "x-concept": {
                              "id": "attachment",
                              "title": "Document numérique attaché",
                              "primary": true
                            }
                          },
                          "nom_certificat": {
                            "title": "Libellé du certificat",
                            "type": "string",
                            "description": "",
                            "x-cardinality": 40,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "examples": [
                              "QUALIBAT-RGE",
                              "QualiPAC module Chauffage et ECS",
                              "Certificat OPQIBI",
                              "Tableau de l´Ordre",
                              "Qualibois Eau",
                              "QualiPV 36",
                              "Certificat Qualifelec RGE",
                              "Qualibois Air",
                              "Ventilation +",
                              "Qualisol CESI",
                              "Chauffage +",
                              "QualiPV 500",
                              "Qualisol Combi",
                              "CertiRénov RGE par CERQUAL Qualitel Certification",
                              "QualiPAC module CET",
                              "AUDIT ENERGETIQUE BATIMENT",
                              "CERTIBAT-RGE",
                              "Certiforage module Sonde",
                              "Certiforage module Nappe",
                              "Qualisol Collectif",
                              "RGE Etudes Audits énergétiques Batiments",
                              "CERTIFACT_EUSKADI_EKO",
                              "CERTIFACT_RLB_SQA",
                              "CERTIFICAT_ABCDOMUS",
                              "CERTIFICAT_ADFACTO",
                              "CERTIFICAT_BATIMEX",
                              "CERTIFICAT_BETREC_IG",
                              "CERTIFICAT_BET_PHILIPPE_POULAIN",
                              "CERTIFICAT_CABINET_BAZIN",
                              "CERTIFICAT_CABINET_DENIZOU",
                              "CERTIFICAT_CABINET_HENRI_BRUGNONI_INGENIERIE_HBI",
                              "CERTIFICAT_DPS",
                              "CERTIFICAT_ECHOS",
                              "CERTIFICAT_ECR_HABITAT",
                              "CERTIFICAT_EMIOS",
                              "CERTIFICAT_GBA_CO",
                              "CERTIFICAT_GEXPERTISE",
                              "CERTIFICAT_PLENETUDE",
                              "CERTIFICAT_P_ET_G_PLENETUDE",
                              "CERTIFICAT_SARL_DOMINIQUE_CALLIET"
                            ]
                          },
                          "domaine": {
                            "type": "array",
                            "title": "Domaine de travaux",
                            "description": "",
                            "items": {
                              "type": "string",
                              "x-cardinality": 32,
                              "x-capabilities": {
                                "textAgg": true
                              },
                              "examples": [
                                "Isolation par l'intérieur des murs ou rampants de toitures  ou plafonds",
                                "Chauffe-Eau Thermodynamique",
                                "Pompe à chaleur : chauffage",
                                "Fenêtres, volets, portes donnant sur l'extérieur",
                                "Isolation des combles perdus",
                                "Isolation des murs par l'extérieur",
                                "Poêle ou insert bois",
                                "Isolation des toitures terrasses ou des toitures par l'extérieur",
                                "Chaudière condensation ou micro-cogénération gaz ou fioul",
                                "Fenêtres de toit",
                                "Ventilation mécanique",
                                "Panneaux solaires photovoltaïques",
                                "Isolation des planchers bas",
                                "Audit énergétique Maison individuelle",
                                "Radiateurs électriques, dont régulation.",
                                "Architecte",
                                "Chaudière bois",
                                "Chauffage et/ou eau chaude solaire",
                                "Audit énergétique Logement collectif",
                                "Etude thermique reglementaire",
                                "Etude solaire photovoltaïque",
                                "Etude forage géothermique",
                                "Etude bois énergie",
                                "Etude ACV",
                                "Projet complet de rénovation",
                                "Etude solaire thermique",
                                "Etude système technique bâtiment",
                                "Etude eclairage",
                                "Inconnu",
                                "Etude enveloppe du bâtiment",
                                "Commisionnement",
                                "Non renseigné"
                              ]
                            }
                          },
                          "meta_domaine": {
                            "title": "Méta domaine",
                            "type": "string",
                            "description": "",
                            "x-cardinality": 6,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "examples": [
                              "Travaux d'efficacité énergétique",
                              "Installations d'énergies renouvelables",
                              "Etudes énergétiques",
                              "Rénovation globale",
                              "Inconnu",
                              "Non renseigné"
                            ]
                          },
                          "organisme": {
                            "title": "Organisme",
                            "type": "string",
                            "description": "",
                            "x-cardinality": 12,
                            "x-capabilities": {
                              "textAgg": true
                            },
                            "examples": [
                              "qualibat",
                              "qualitenr",
                              "opqibi",
                              "cnoa",
                              "qualifelec",
                              "Non renseigné",
                              "Inconnu",
                              "cerqual",
                              "afnor",
                              "certibat",
                              "opqtecc",
                              "lne"
                            ]
                          },
                          "particulier": {
                            "title": "Travaille pour les particuliers",
                            "type": "boolean",
                            "description": "",
                            "x-cardinality": 2,
                            "x-capabilities": {},
                            "examples": [
                              "true",
                              "false"
                            ]
                          },
                          "lien_date_debut": {
                            "title": "Date de début de qualification",
                            "type": "string",
                            "format": "date",
                            "description": "Cette date correspond à la date de début de qualification transmise par l'organisme de qualification",
                            "x-capabilities": {},
                            "x-cardinality": 1901
                          },
                          "lien_date_fin": {
                            "title": "Date de fin de qualification",
                            "type": "string",
                            "format": "date",
                            "description": "Cette date correspond à la date de fin de qualification transmise par l'organisme de qualification",
                            "x-capabilities": {},
                            "x-cardinality": 1541
                          },
                          "_file.content": {
                            "x-calculated": true,
                            "type": "string",
                            "title": "Contenu textuel du fichier",
                            "description": "Résultat d'une extraction automatique",
                            "readOnly": true
                          },
                          "_file.content_type": {
                            "x-calculated": true,
                            "type": "string",
                            "title": "Type mime du fichier",
                            "description": "Résultat d'une détection automatique.",
                            "readOnly": true
                          },
                          "_file.content_length": {
                            "x-calculated": true,
                            "type": "integer",
                            "title": "La taille en octet du fichier",
                            "description": "Résultat d'une détection automatique.",
                            "readOnly": true
                          },
                          "_attachment_url": {
                            "x-calculated": true,
                            "type": "string",
                            "title": "URL de téléchargement unitaire du fichier joint",
                            "readOnly": true
                          },
                          "_geopoint": {
                            "x-calculated": true,
                            "type": "string",
                            "title": "Coordonnée géographique",
                            "description": "Centroïde au format \"lat,lon\"",
                            "x-refersTo": "http://www.w3.org/2003/01/geo/wgs84_pos#lat_long",
                            "x-concept": {
                              "id": "latLon",
                              "title": "Latitude / Longitude",
                              "primary": true
                            },
                            "readOnly": true
                          },
                          "_id": {
                            "x-calculated": true,
                            "type": "string",
                            "format": "uri-reference",
                            "title": "Identifiant",
                            "description": "Identifiant unique parmi toutes les lignes du jeu de données",
                            "readOnly": true
                          },
                          "_i": {
                            "x-calculated": true,
                            "type": "integer",
                            "title": "Numéro de ligne",
                            "description": "Indice de la ligne dans le fichier d'origine",
                            "readOnly": true
                          },
                          "_rand": {
                            "x-calculated": true,
                            "type": "integer",
                            "title": "Nombre aléatoire",
                            "description": "Un nombre aléatoire associé à la ligne qui permet d'obtenir un tri aléatoire par exemple",
                            "readOnly": true
                          }
                        }
                      }
                    },
                    "next": {
                      "type": "string",
                      "description": "URL pour continuer la pagination"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/values_agg": {
      "get": {
        "summary": "Agréger les valeurs",
        "description": "Récupérer des informations agrégées en fonction des valeurs d'une colonne.",
        "operationId": "getValuesAgg",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "description": "La colonne en fonction des valeurs desquelles grouper les lignes du jeu de données",
            "required": true,
            "schema": {
              "title": "Colonne de groupement",
              "type": "string",
              "enum": [
                "siret",
                "nom_entreprise",
                "adresse",
                "code_postal",
                "commune",
                "telephone",
                "email",
                "site_internet",
                "code_qualification",
                "nom_qualification",
                "url_qualification",
                "nom_certificat",
                "domaine",
                "meta_domaine",
                "organisme"
              ]
            }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Le format de sérialisation de la donnée.\n  \n  - **json** (défaut)\n  - **csv** pour format compatibles tableurs\n  - **pbf** pour tuiles vectorielles\n  - **geojson** et **wkt** pour formats géographiques",
            "schema": {
              "title": "Format de sérialisation",
              "default": "json",
              "type": "string",
              "enum": [
                "json",
                "csv",
                "xlsx",
                "ods",
                "pbf",
                "geojson",
                "wkt"
              ]
            }
          },
          {
            "in": "query",
            "name": "html",
            "description": "Effectuer le rendu des contenus formattés de **markdown** vers **HTML**",
            "schema": {
              "title": "Rendu HTML des contenus markdown",
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "metric",
            "description": "La métrique à appliquer",
            "schema": {
              "title": "Métrique",
              "type": "string",
              "enum": [
                "avg",
                "sum",
                "min",
                "max"
              ]
            }
          },
          {
            "in": "query",
            "name": "metric_field",
            "description": "La colonne sur lequel effectuer la calcul de métrique",
            "schema": {
              "type": "string",
              "enum": [
                "latitude",
                "longitude"
              ]
            }
          },
          {
            "in": "query",
            "name": "missing",
            "description": "Nom du groupe des lignes pour lesquelles la colonne de groupement est vide",
            "schema": {
              "title": "Groupe des valeurs manquantes",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "agg_size",
            "description": "Le nombre de buckets pour l'agrégation",
            "schema": {
              "default": 20,
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Le nombre de résultats à retourner (taille de la pagination).",
            "schema": {
              "title": "Taille de la pagination",
              "default": 0,
              "type": "integer",
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "\nLe tri à effectuer sous forme d'une liste de clés de colonnes séparées par des virgules.\n\nPar défaut le tri est ascendant, si un nom de colonne est préfixé par un \"-\" alors le tri sera descendant.\n\nExemple: ma_colonne,-ma_colonne2",
            "schema": {
              "title": "Ordre des résultats",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "select",
            "description": "La liste des colonnes à retourner",
            "schema": {
              "title": "La liste des colonnes à retourner",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              },
              "default": "all"
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "highlight",
            "description": "\nDemande à retourner des extraits du document qui contiennent les mots utilisés en filtre (paramètres q et qs).\n\nLa valeur est une liste de colonnes séparées par des virgules.\n    ",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "sampling",
            "description": "\n  **Uniquement avec le paramètre de tuilage xyz**. Configure le mode d'échantillonage des resultats pour privilégier soit l'exhaustivité des données soit une densité plus homogène sur la carte.\n  \n    - **neighbors** (défaut) : utilise la densité maximale parmi les tuiles voisines pour réduire la densité de la tuile courante au même niveau d'échantillonage (couteux en performance).\n    - **max** : retourne le maximum (limité par le paramètre size) de résultat pour chaque tuile.\n      ",
            "schema": {
              "type": "string",
              "enum": [
                null,
                "neighbors",
                "max"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les informations du jeu de données agrégées par valeurs d'une colonne",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/values/{field}": {
      "get": {
        "summary": "Lister les valeurs distinctes",
        "description": "Récupérer la liste des valeurs distinctes d'une colonne.",
        "operationId": "getValues",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "field",
            "description": "La colonne pour laquelle récupérer les valeurs distinctes",
            "required": true,
            "schema": {
              "title": "Colonne",
              "type": "string",
              "enum": [
                "siret",
                "nom_entreprise",
                "adresse",
                "code_postal",
                "commune",
                "telephone",
                "email",
                "site_internet",
                "code_qualification",
                "nom_qualification",
                "url_qualification",
                "nom_certificat",
                "domaine",
                "meta_domaine",
                "organisme"
              ]
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Le nombre de résultats à retourner (taille de la pagination). 10 par défaut",
            "schema": {
              "title": "Taille de la pagination",
              "default": 10,
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Tri des valeurs (\"**asc**\" ou \"**desc**\").\n\"**asc**\" par défaut",
            "schema": {
              "title": "Ordre de tri",
              "type": "string",
              "oneOf": [
                {
                  "const": "asc",
                  "title": "Ascendant"
                },
                {
                  "const": "desc",
                  "title": "Descendant"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les valeurs d'une colonne",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    },
    "/metric_agg": {
      "get": {
        "summary": "Calculer une métrique",
        "description": "Calculer une métrique sur une colonne.",
        "operationId": "getMetricAgg",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "metric",
            "description": "La métrique à calculer",
            "required": true,
            "schema": {
              "title": "Métrique à calculer",
              "type": "string",
              "enum": [
                "avg",
                "sum",
                "min",
                "max",
                "stats",
                "value_count",
                "percentiles",
                "cardinality"
              ]
            }
          },
          {
            "in": "query",
            "name": "field",
            "description": "La colonne sur laquelle calculer la métrique",
            "schema": {
              "title": "Colonne pour le calcul de métrique",
              "type": "string",
              "enum": [
                "siret",
                "nom_entreprise",
                "adresse",
                "code_postal",
                "commune",
                "latitude",
                "longitude",
                "telephone",
                "email",
                "site_internet",
                "code_qualification",
                "nom_qualification",
                "url_qualification",
                "nom_certificat",
                "domaine",
                "meta_domaine",
                "organisme",
                "particulier",
                "lien_date_debut",
                "lien_date_fin",
                "_file.content",
                "_file.content_type",
                "_file.content_length",
                "_attachment_url",
                "_geopoint",
                "_id",
                "_i",
                "_rand"
              ]
            },
            "required": true
          },
          {
            "in": "query",
            "name": "percents",
            "description": "Les pourcentages sur lesquels calculer la métrique percentiles (inutile pour les autres métriques).",
            "required": false,
            "schema": {
              "title": "Pourcentages sur lesquels calculer la métrique percentiles",
              "type": "string",
              "default": "1,5,25,50,75,95,99"
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le résultat du calcul",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/simple_metrics_agg": {
      "get": {
        "summary": "Calculer des métriques simples",
        "description": "Calculer des métriques simples standards sur toutes les colonnes possibles ou sur une liste de colonnes.",
        "operationId": "getSimpleMetricsAgg",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "metrics",
            "description": "Les métriques à appliquer. Des métriques par défaut sont appliquées en fonction du type de champ.",
            "schema": {
              "title": "Métriques à appliquer",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "avg",
                  "sum",
                  "min",
                  "max",
                  "stats",
                  "value_count",
                  "percentiles",
                  "cardinality"
                ]
              }
            }
          },
          {
            "in": "query",
            "name": "fields",
            "description": "Les colonnes sur lesquelles calculer les métriques.",
            "schema": {
              "title": "Colonnes sur lesquelles calculer les métriques",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le résultat du calcul",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/words_agg": {
      "get": {
        "summary": "Lister les mots significatifs",
        "description": "Récupérer des mots significatifs d'une colonne dans un jeu de données.",
        "operationId": "getWordsAgg",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "field",
            "description": "La colonne sur lequel effectuer l'analyse",
            "required": true,
            "schema": {
              "title": "Colonne pour l'analyse",
              "type": "string",
              "enum": [
                "siret",
                "nom_entreprise",
                "adresse",
                "code_postal",
                "commune",
                "telephone",
                "email",
                "site_internet",
                "code_qualification",
                "nom_qualification",
                "url_qualification",
                "nom_certificat",
                "domaine",
                "meta_domaine",
                "organisme"
              ]
            }
          },
          {
            "in": "query",
            "name": "analysis",
            "description": "Le type d'analyse textuelle effectuée sur la colonne.\nL'analyse \"**lang**\" est intelligente en fonction de la langue, elle calcule la racine grammaticale des mots et ignore les mots les moins significatifs.\nL'analyse \"**standard**\" effectue un travail plus basique d'extraction de mots bruts depuis le texte",
            "schema": {
              "title": "Type d'analyse à effectuer",
              "type": "string",
              "default": "lang",
              "enum": [
                "lang",
                "standard"
              ]
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Le résultat de l'analyse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/schema": {
      "get": {
        "summary": "Lire le schéma",
        "description": "Récupérer la liste des colonnes et leurs détails.",
        "operationId": "readSchema",
        "x-permissionClass": "read",
        "tags": [
          "Métadonnées"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mimeType",
            "description": "Définir le format du schéma",
            "required": false,
            "schema": {
              "title": "Format du schéma",
              "type": "string",
              "default": "application/json",
              "enum": [
                "application/json",
                "application/tableschema+json",
                "application/schema+json"
              ]
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filtre sur le type de colonne",
            "required": false,
            "schema": {
              "title": "Filtre sur le type de colonne",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "string",
                  "boolean",
                  "integer",
                  "number"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "format",
            "description": "Filtre sur de format d'une colonne de type chaine de caractère",
            "required": false,
            "schema": {
              "title": "Filtre sur de format d'une colonne",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "uri-reference",
                  "date",
                  "date-time"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "capability",
            "description": "Restreindre aux colonnes ayant une capacité particulière",
            "required": false,
            "schema": {
              "title": "Restreindre par capacité de la colonne",
              "type": "string",
              "enum": [
                null,
                "index",
                "values",
                "textStandard",
                "text",
                "textAgg",
                "wildcard",
                "insensitive",
                "geoShape",
                "vtPrepare",
                "indexAttachment"
              ]
            }
          },
          {
            "in": "query",
            "name": "enum",
            "description": "Restreindre aux colonnes ayant une énumération de valeurs (moins de 50 valeurs distinctes)",
            "required": false,
            "schema": {
              "title": "Restreindre par colonnes énumérables",
              "type": "string",
              "enum": [
                "false",
                "true"
              ]
            }
          },
          {
            "in": "query",
            "name": "calculated",
            "description": "Inclure les colonnes calculées (non issues du fichier d'origine)",
            "required": false,
            "schema": {
              "title": "Inclure les colonnes calculées",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des colonnes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/safe-schema": {
      "get": {
        "summary": "Lire le schéma réduit",
        "description": "Récupérer la liste des colonnes et leurs détails.\n*Les indices sur le contenu de la donnée sont purgés*",
        "operationId": "readSafeSchema",
        "x-permissionClass": "read",
        "tags": [
          "Métadonnées"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mimeType",
            "description": "Définir le format du schéma",
            "required": false,
            "schema": {
              "title": "Format du schéma",
              "type": "string",
              "default": "application/json",
              "enum": [
                "application/json",
                "application/tableschema+json",
                "application/schema+json"
              ]
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filtre sur le type de colonne",
            "required": false,
            "schema": {
              "title": "Filtre sur le type de colonne",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "string",
                  "boolean",
                  "integer",
                  "number"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "format",
            "description": "Filtre sur de format d'une colonne de type chaine de caractère",
            "required": false,
            "schema": {
              "title": "Filtre sur de format d'une colonne",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "uri-reference",
                  "date",
                  "date-time"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "capability",
            "description": "Restreindre aux colonnes ayant une capacité particulière",
            "required": false,
            "schema": {
              "title": "Restreindre par capacité de la colonne",
              "type": "string",
              "enum": [
                null,
                "index",
                "values",
                "textStandard",
                "text",
                "textAgg",
                "wildcard",
                "insensitive",
                "geoShape",
                "vtPrepare",
                "indexAttachment"
              ]
            }
          },
          {
            "in": "query",
            "name": "enum",
            "description": "Restreindre aux colonnes ayant une énumération de valeurs (moins de 50 valeurs distinctes)",
            "required": false,
            "schema": {
              "title": "Restreindre par colonnes énumérables",
              "type": "string",
              "enum": [
                "false",
                "true"
              ]
            }
          },
          {
            "in": "query",
            "name": "calculated",
            "description": "Inclure les colonnes calculées (non issues du fichier d'origine)",
            "required": false,
            "schema": {
              "title": "Inclure les colonnes calculées",
              "type": "string",
              "enum": [
                "true",
                "false"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "La liste des colonnes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api-docs.json": {
      "get": {
        "summary": "Obtenir la documentation OpenAPI",
        "description": "Accéder à cette documentation publique au format OpenAPI v3.",
        "operationId": "readApiDoc",
        "x-permissionClass": "read",
        "tags": [
          "Métadonnées"
        ],
        "responses": {
          "200": {
            "description": "La documentation publique de l'API",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/geo_agg": {
      "get": {
        "summary": "Agréger spatialement",
        "description": "Récupérer des informations agrégées spatialement sur le jeu de données.",
        "operationId": "getGeoAgg",
        "x-permissionClass": "read",
        "tags": [
          "Données"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "agg_size",
            "description": "Le nombre de buckets pour l'agrégation",
            "schema": {
              "default": 20,
              "type": "integer",
              "maximum": 10000
            }
          },
          {
            "in": "query",
            "name": "q",
            "description": "\n  Colonne de recherche simple. Ce paramètre peut-être utilisé pour exposer une fonctionalité de recherche textuelle riche aux utilisateurs sans risque de créer des erreurs de syntaxe.\n\n  Exemple: \"open data\" | \"open source\"\n\n  Pour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html) correspondante.\n    ",
            "schema": {
              "title": "Recherche textuelle",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "q_mode",
            "description": "\n  Ce paramètre permet d'altérer le comportement du paramètre \"q\".\n\n  Le mode par défaut \"simple\" expose directement la fonctionnalité [simple-query-string de Elasticsearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-simple-query-string-query.html)\n\n  Le mode \"complete\" permet d'enrichir automatiquement la requête soumise par l'utilisateur pour un résultat intuitif dans le contexte d'un champ de type autocomplete. Attention ce mode est potentiellement moins performant et à limiter à des jeux de données au volume raisonnable.\n    ",
            "schema": {
              "title": "Mode de recherche",
              "type": "string",
              "default": "simple",
              "enum": [
                "simple",
                "complete"
              ]
            }
          },
          {
            "in": "query",
            "name": "q_fields",
            "description": "\n  Ce paramètre permet de spécifier les colonnes sur lesquelles appliquer le paramètre \"q\".\n\n  Par défaut toutes les colonnes supportant une recherche textuelle sont utilisées.\n    ",
            "schema": {
              "title": "Colonnes de recherche",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "qs",
            "description": "\nColonne de filtre et recherche textuelle avancée. Ce paramètre permet d'effectuer des requêtes complexes sur la source de données. Vous pouvez spécifier des filtres par colonne, créer des combinaisons logiques à volonté, etc.\n\nExemple: ma_colonne:\"du texte\" AND ma_colonne2:valeur\n\nPour plus d'information voir la documentation [ElasticSearch](https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-query-string-query.html) correspondante.\n  ",
            "schema": {
              "title": "Recherche textuelle avancée",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bbox",
            "description": "Un filtre pour restreindre les résultats à une zone géographique. Le format est 'gauche,bas,droite,haut' autrement dit 'lonMin,latMin,lonMax,latMax'.",
            "schema": {
              "title": "Filtre par zone géographique",
              "type": "string",
              "enum": [
                "lonMin",
                "latMin",
                "lonMax",
                "latMax"
              ]
            }
          },
          {
            "in": "query",
            "name": "xyz",
            "description": "\n  Un filtre pour restreindre les résultats à une zone géographique avec les paramètres standards de tuiles géographiques x,y et z.\n\n  Le format est 'x,y,z'.\n    ",
            "schema": {
              "title": "Filtre par tuile géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "geo_distance",
            "description": "\n  Un filtre pour restreindre les résultats à moins d'une certaine distance du point passé en paramètre.\n\n  Le format est 'lon:lat:distance'. La distance optionnelle (0 par défaut) et est exprimée en mètres.\n\n  Si les documents contiennent des géométries la distance est calculée à partir de leurs centroïdes à moins que la distance soit 0 auquel cas le filtre retourne tous les documents dont la géométrie contient le point passé en paramètre.\n    ",
            "schema": {
              "title": "Filtre par distance géographique",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "size",
            "description": "Le nombre de résultats à retourner (taille de la pagination).",
            "schema": {
              "title": "Taille de la pagination",
              "default": 0,
              "type": "integer",
              "maximum": 100
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "\nLe tri à effectuer sous forme d'une liste de clés de colonnes séparées par des virgules.\n\nPar défaut le tri est ascendant, si un nom de colonne est préfixé par un \"-\" alors le tri sera descendant.\n\nExemple: ma_colonne,-ma_colonne2",
            "schema": {
              "title": "Ordre des résultats",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "select",
            "description": "La liste des colonnes à retourner",
            "schema": {
              "title": "La liste des colonnes à retourner",
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "latitude",
                  "longitude",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme",
                  "particulier",
                  "lien_date_debut",
                  "lien_date_fin",
                  "_file.content",
                  "_file.content_type",
                  "_file.content_length",
                  "_attachment_url",
                  "_geopoint",
                  "_id",
                  "_i",
                  "_rand"
                ]
              },
              "default": "all"
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "highlight",
            "description": "\nDemande à retourner des extraits du document qui contiennent les mots utilisés en filtre (paramètres q et qs).\n\nLa valeur est une liste de colonnes séparées par des virgules.\n    ",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "siret",
                  "nom_entreprise",
                  "adresse",
                  "code_postal",
                  "commune",
                  "telephone",
                  "email",
                  "site_internet",
                  "code_qualification",
                  "nom_qualification",
                  "url_qualification",
                  "nom_certificat",
                  "domaine",
                  "meta_domaine",
                  "organisme"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "sampling",
            "description": "\n  **Uniquement avec le paramètre de tuilage xyz**. Configure le mode d'échantillonage des resultats pour privilégier soit l'exhaustivité des données soit une densité plus homogène sur la carte.\n  \n    - **neighbors** (défaut) : utilise la densité maximale parmi les tuiles voisines pour réduire la densité de la tuile courante au même niveau d'échantillonage (couteux en performance).\n    - **max** : retourne le maximum (limité par le paramètre size) de résultat pour chaque tuile.\n      ",
            "schema": {
              "type": "string",
              "enum": [
                null,
                "neighbors",
                "max"
              ]
            }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Le format de sérialisation de la donnée.\n  \n  - **json** (défaut)\n  - **csv** pour format compatibles tableurs\n  - **pbf** pour tuiles vectorielles\n  - **geojson** et **wkt** pour formats géographiques",
            "schema": {
              "title": "Format de sérialisation",
              "default": "json",
              "type": "string",
              "enum": [
                "json",
                "csv",
                "xlsx",
                "ods",
                "pbf",
                "geojson",
                "wkt"
              ]
            }
          },
          {
            "in": "query",
            "name": "html",
            "description": "Effectuer le rendu des contenus formattés de **markdown** vers **HTML**",
            "schema": {
              "title": "Rendu HTML des contenus markdown",
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Les informations du jeu de données agrégées spatialement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "Documentation sur Github",
    "url": "https://data-fair.github.io/master/"
  }
}